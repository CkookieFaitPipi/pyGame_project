import pygame
import random
import sys

pygame.init()
screen_width = 1000
screen_height = 1000
ssize = (1000, 1000)
screen = pygame.display.set_mode(ssize)
pygame.display.set_caption("CosmoTrip")
clock = pygame.time.Clock()

widht = 140
height = 140
px = 500 - (widht // 2)
py = ssize[1] - 20 - widht
speed = 10
FPS = 60

global xspeed
xspeed = 1

fon = pygame.transform.scale(pygame.image.load('fon1.jpg'), (2000, 1000))
fonr = fon.get_rect()

laser = pygame.transform.scale(pygame.image.load('glaser.png'), (10, 33))

player_image = pygame.transform.scale(pygame.image.load('player1.png'), (widht, height))

pygame.display.set_icon(player_image)


def start_screen():
    global score
    score = 0
    global run
    run = True
    with open('score.txt', 'r') as bscore:
        line = bscore.readlines()
        best_score = line[-1]
    fon = pygame.transform.scale(pygame.image.load('fon1.jpg'), (2000, 1000))
    screen.blit(fon, (0, 0))
    font = pygame.font.Font('Minecraft.ttf', 100)
    name = 'CosmotriP'
    string_rendered = font.render(name, 0, pygame.Color('white'))
    intro_rect = string_rendered.get_rect()
    intro_rect.centerx = screen_width / 2
    intro_rect.top = 200
    screen.blit(string_rendered, intro_rect)
    draw_text(screen, 'Level', 50, 500, 400)
    draw_text(screen, f'Best score: {best_score}', 40, 800, 40)
    while run:
        clock.tick(FPS)
        event_list = pygame.event.get()
        for event in event_list:
            if event.type == pygame.QUIT:
                terminate()

        group.update(event_list)
        group.draw(screen)
        pygame.display.flip()


def terminate():
    pygame.quit()
    sys.exit()


def draw_text(surf, text, size, x, y):
    fontt = pygame.font.Font('Minecraft.ttf', size)
    text_surface = fontt.render(text, True, (255, 255, 255))
    text_rect = text_surface.get_rect()
    text_rect.midtop = (x, y)
    surf.blit(text_surface, text_rect)


class Hard_quality(pygame.sprite.Sprite):
    def __init__(self, x, y, w, font, text):
        super().__init__()
        self.color = (255, 255, 255)
        self.backcolor = (50, 50, 50)
        self.pos = (x, y)
        self.width = w
        self.font = font
        self.text = text
        self.render_text()

    def render_text(self):
        t_surf = self.font.render(self.text, True, self.color, self.backcolor)
        self.image = pygame.Surface((max(self.width, t_surf.get_width() + 10), t_surf.get_height() + 10),
                                    pygame.SRCALPHA)
        if self.backcolor:
            self.image.fill(self.backcolor)
        self.image.blit(t_surf, (150, 10))
        pygame.draw.rect(self.image, self.color, self.image.get_rect().inflate(-2, -2), 2)
        self.rect = self.image.get_rect(topleft=self.pos)

    def update(self, event_list):
        global xspeed
        global run
        for event in event_list:
            if event.type == pygame.MOUSEBUTTONDOWN and 300 < event.pos[0] < 700 and 550 < event.pos[1] < 600:
                xspeed = 1
                run = False
            elif event.type == pygame.MOUSEBUTTONDOWN and 300 < event.pos[0] < 700 and 650 < event.pos[1] < 700:
                xspeed = 1.5
                run = False
            elif event.type == pygame.MOUSEBUTTONDOWN and 300 < event.pos[0] < 700 and 750 < event.pos[1] < 800:
                xspeed = 2
                run = False


class Player(pygame.sprite.Sprite):
    global coords

    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = player_image
        self.rect = self.image.get_rect()
        self.rect.topleft = (px, py)

    def update(self):
        self.speedx = 10
        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT]:
            self.rect.x -= self.speedx
        if keys[pygame.K_RIGHT]:
            self.rect.x += self.speedx
        if self.rect.right > ssize[0]:
            self.rect.right = ssize[0]
        if self.rect.left < 0:
            self.rect.left = 0

    def shoot(self):
        bullet = Laser(self.rect.centerx, self.rect.top)
        all_sprites.add(bullet)
        bullets.add(bullet)

    def move(self):
        self.rect = self.image.get_rect().move(px, py)


class Laser(pygame.sprite.Sprite):
    def __init__(self, x, y):
        pygame.sprite.Sprite.__init__(self)
        self.image = laser
        self.rect = self.image.get_rect()

        self.rect.bottom = y
        self.rect.centerx = x
        self.speedy = -10

    def update(self):
        self.rect.y += self.speedy
        if self.rect.bottom < 0:
            self.kill()


class Meteor(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.ma = random.randint(45, 100)
        self.meteor_size = (self.ma, self.ma * 0.9)
        self.meteor = pygame.transform.scale(pygame.image.load('meteor.png'), self.meteor_size)
        self.image = self.meteor
        self.rect = self.image.get_rect()
        self.rect.x = random.randrange(ssize[0] - self.rect.width)
        self.rect.y = random.randrange(-100, -40)
        self.speedy = (random.randrange(1, 8) * xspeed)
        self.speedx = (random.randrange(-3, 3))

    def update(self):
        self.rect.x += self.speedx
        self.rect.y += self.speedy
        if self.rect.top > ssize[1] + 10 or self.rect.left < -100 or self.rect.right > ssize[0] + 100:
            self.rect.x = random.randrange(ssize[0] - self.rect.width)
            self.rect.y = random.randrange(-100, -40)
            self.speedy = (random.randrange(1, 8) * xspeed)


font = pygame.font.Font('Minecraft.ttf', 40)
easy = Hard_quality(300, 550, 400, font, 'EASY')
normal = Hard_quality(300, 650, 400, font, "NORMAL")
hard = Hard_quality(300, 750, 400, font, 'HARD')

group = pygame.sprite.Group(easy, normal, hard)

meteors = pygame.sprite.Group()
all_sprites = pygame.sprite.Group()
bullets = pygame.sprite.Group()
player = Player()
all_sprites.add(player)
start_screen()

for i in range(8):
    m = Meteor()
    all_sprites.add(m)
    meteors.add(m)

running = True
while running:
    clock.tick(FPS)
    global score
    global rect
    score += round(2 * xspeed)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE:
                player.shoot()
    all_sprites.update()

    hits = pygame.sprite.groupcollide(meteors, bullets, True, True)
    for hit in hits:
        m = Meteor()
        all_sprites.add(m)
        meteors.add(m)

    hits = pygame.sprite.spritecollide(player, meteors, False)
    if hits:
        player.move()
        with open('score.txt', 'r') as bscore:
            line = bscore.readlines()
            if int(line[-1]) < score:
                with open('score.txt', 'w') as rscore:
                    rscore.write(str(score))

        start_screen()
        score = 0

        for m in meteors:
            m.kill()
            m = Meteor()
            all_sprites.add(m)
            meteors.add(m)

    screen.fill((0, 0, 0))
    screen.blit(fon, fonr)
    all_sprites.draw(screen)
    draw_text(screen, str(score), 30, 800, 10)
    pygame.display.flip()

